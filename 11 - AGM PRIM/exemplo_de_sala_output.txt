------ PRIM Activity -----
Enter 1 to read from file or 2 to enter manually: 2
Enter the vertices list separated by commas: v0,v1,v2,v3,v4,v5,v6,v7,v8
Enter the root vertex: v0

Enter the edges list separated by commas in the following format (vi, w, vf).
To stop inserting vertices just enter an empty value:
Note: this is an undirected graph, so the edge (vi, vf) is the same as (vf, vi).
v0,1,v2
Edge: v0,1,v2
v1,5,v2
Edge: v1,5,v2
v2,3,v3
Edge: v2,3,v3
v2,2,v7
Edge: v2,2,v7
v2,2,v4
Edge: v2,2,v4
v3,1,v7
Edge: v3,1,v7
v4,1,v5
Edge: v4,1,v5
v5,4,v6
Edge: v5,4,v6
v6,1,v8
Edge: v6,1,v8
v7,3,v8
Edge: v7,3,v8

End of edges list.
Vertex v0 added.
Vertex v1 added.
Vertex v2 added.
Vertex v3 added.
Vertex v4 added.
Vertex v5 added.
Vertex v6 added.
Vertex v7 added.
Vertex v8 added.
Origin: v0 Destiny: v2 Weight: 1
Edge (v0, v2) with weight 1 added.
Origin: v1 Destiny: v2 Weight: 5
Edge (v1, v2) with weight 5 added.
Origin: v2 Destiny: v3 Weight: 3
Edge (v2, v3) with weight 3 added.
Origin: v2 Destiny: v7 Weight: 2
Edge (v2, v7) with weight 2 added.
Origin: v2 Destiny: v4 Weight: 2
Edge (v2, v4) with weight 2 added.
Origin: v3 Destiny: v7 Weight: 1
Edge (v3, v7) with weight 1 added.
Origin: v4 Destiny: v5 Weight: 1
Edge (v4, v5) with weight 1 added.
Origin: v5 Destiny: v6 Weight: 4
Edge (v5, v6) with weight 4 added.
Origin: v6 Destiny: v8 Weight: 1
Edge (v6, v8) with weight 1 added.
Origin: v7 Destiny: v8 Weight: 3
Edge (v7, v8) with weight 3 added.
PRIM Tree:
Get node v0 with distance 0
Updating distance of node v2 to 1
pi(v2) = v0
Get node v2 with distance 1
Updating distance of node v1 to 5
pi(v1) = v2
Updating distance of node v3 to 3
pi(v3) = v2
Updating distance of node v7 to 2
pi(v7) = v2
Updating distance of node v4 to 2
pi(v4) = v2
Get node v4 with distance 2
Updating distance of node v5 to 1
pi(v5) = v4
Get node v5 with distance 1
Updating distance of node v4 to 1
pi(v4) = v5
Updating distance of node v6 to 4
pi(v6) = v5
Get node v7 with distance 2
Updating distance of node v3 to 1
pi(v3) = v7
Updating distance of node v8 to 3
pi(v8) = v7
Get node v3 with distance 1
Updating distance of node v7 to 1
pi(v7) = v3
Get node v8 with distance 3
Updating distance of node v6 to 1
pi(v6) = v8
Get node v6 with distance 1
Updating distance of node v8 to 1
pi(v8) = v6
Get node v1 with distance 5

Minimal Tree:
(, v0) with weight 0
(v0, v2) with weight 1
(v2, v4) with weight 1
(v4, v5) with weight 1
(v2, v7) with weight 1
(v7, v3) with weight 1
(v7, v8) with weight 1
(v8, v6) with weight 1
(v2, v1) with weight 5
Total weight: 16
---